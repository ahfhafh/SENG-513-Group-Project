<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="/styles/courseCommentsStyle.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href='https://fonts.googleapis.com/css?family=Comfortaa' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'>
    <title>Reviews</title>
</head>

<body>
    <% Reviews.forEach( (review) => { %>
    <% const reviewID = review._id; %>
    <div class="review">
        <div class="voting">
            <span id="voteResults"><%- review.comment_votes %> </span>
            <button id="upvote" onclick="upvote('<%- reviewID %>', this)" type="button"><span>▲</span></button>
            <button id="downvote" onclick="downvote('<%- reviewID %>', this)" type="button"><span>▼</span></button>
        </div>

        <p id="date">
            <% let timestamp = reviewID.toString().substring(0, 8); 
            let options = { year: 'numeric', month: 'short', day: 'numeric' };%>
            <%- (new Date(parseInt(timestamp, 16) * 1000)).toLocaleDateString("en-US", options); %>
        </p>

        <div class="starRating">
            <% let nonChecked = 5 - review.rating; for (let i = 0; i < review.rating; i++) { %>
            <span class="fa fa-star fa-lg checked"></span>
            <% }; review.rating--; for (; review.rating < 4; review.rating++) { %>
            <span class="fa fa-star fa-lg"></span>
            <% }; %>
        </div>

        <p id="comment"><%- review.comment %> </p>

        <div class="keywords">
            <% for (let i = 0; i < review.keywords.length; i++) { %>
            <span class="keyword"><%- review.keywords[i] %> </span>
            <% } %>
        </div>


        <div class="replyButtons">
            <% if (isAdmin) { %>
            <button id="deleteRating" type="button" onclick="window.parent.displayConfirmation();deleteRatingHandler('<%- reviewID %>');">Delete Rating</a>
                <% } else { %>
                <a id="replyButton" href="#">Reply to Comment</a>
                <a class="showRep">Show Replies</a>
                <% } %>
        </div>

        <hr>

        <div class="replies">
            <h3>Replies</h3>
            <div class="reply">
                <span>User: </span>
                <p>word.</p>
            </div>
            <hr>

            <div class="reply">
                <span>User: </span>
                <p>this!!!!!!!</p>
            </div>
            <hr>

            <div class="reply">
                <span>User: </span>
                <p>i disagree :/</p>
            </div>
            <hr>

        </div>
    </div>

    <% }) %>



    <script>
        let last = +new Date();

        // TODO: limit upvote/downvote to 1 time per user
        async function upvote(reviewID, element) {
            var votes = element.previousElementSibling.innerText;
            const now = +new Date();
            // limit clicks for 1 second
            if (now - last > 1000) {
                last = now;

                const result = await fetch('/api/upvote', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        reviewID
                    })
                }).then((res) => res.json());

                if (result.status === 'ok') {
                    votes++;
                    element.previousElementSibling.innerHTML = votes;
                } else {
                    console.log(result.error);
                }
            }

        }

        async function downvote(reviewID, element) {
            var votes = element.previousElementSibling.previousElementSibling.innerText;
            const now = +new Date();
            // limit clicks for 1 second
            if (now - last > 1000) {
                last = now;

                const result = await fetch('/api/downvote', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        reviewID
                    })
                }).then((res) => res.json());

                if (result.status === 'ok') {
                    votes--;
                    element.previousElementSibling.previousElementSibling.innerHTML = votes;
                } else {
                    console.log(result.error);
                }
            }
        }


        var showRep = document.getElementsByClassName("showRep");

        for (var i = 0; i < showRep.length; i++) {
            showRep[i].addEventListener("click", function () {
                var parentNode = this.parentNode;

                var replies = parentNode.nextElementSibling.nextElementSibling;

                if (replies.style.display === "block") {
                    replies.style.display = "none";
                    this.innerText = "Show Replies";
                } else {
                    replies.style.display = "block";
                    this.innerText = "Hide Replies";
                }

            });
        }

        const deleteRatingHandler = async (reviewID) => {
            // are u sure u want to delete this
            const confirmation = await window.parent.deleteConfirmation();

            if (confirmation == true)
            {
                const result = await fetch('/api/deleteRating', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    reviewID
                })
            }).then((res) => res.json());

            if (result.status === 'ok') {
                console.log("Review deleted successfully");
                alert('Review deleted successfully');
                location.reload();
            } else {
                alert(result.error);
            }
            }
            
        };
    </script>
</body>

</html>